// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zadatak1.Entities;

namespace Zadatak1.Migrations
{
    [DbContext(typeof(LeagueContext))]
    [Migration("20190415040431_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Zadatak1.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("LeagueId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Zadatak1.Models.GroupTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupTeams");
                });

            modelBuilder.Entity("Zadatak1.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("Zadatak1.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AwayGoals");

                    b.Property<int>("AwayTeamId");

                    b.Property<int>("GroupId");

                    b.Property<int>("HomeGoals");

                    b.Property<int>("HomeTeamId");

                    b.Property<DateTime?>("KickOffAt");

                    b.Property<int>("MatchDay");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("GroupId", "HomeTeamId", "AwayTeamId")
                        .IsUnique();

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Zadatak1.Models.Standing", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Draw");

                    b.Property<int>("GoalDifference");

                    b.Property<int>("Goals");

                    b.Property<int>("GoalsAgainst");

                    b.Property<int>("Lose");

                    b.Property<int>("PlayedGames");

                    b.Property<int>("Points");

                    b.Property<int>("Rank");

                    b.Property<int>("TeamId");

                    b.Property<int>("Win");

                    b.HasKey("id");

                    b.HasIndex("TeamId");

                    b.ToTable("Standings");
                });

            modelBuilder.Entity("Zadatak1.Models.Group", b =>
                {
                    b.HasOne("Zadatak1.Models.League", "League")
                        .WithMany("Groups")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zadatak1.Models.GroupTeam", b =>
                {
                    b.HasOne("Zadatak1.Models.Group", "Group")
                        .WithMany("GroupTeams")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zadatak1.Models.Match", b =>
                {
                    b.HasOne("Zadatak1.Models.GroupTeam", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Zadatak1.Models.Group", "Group")
                        .WithMany("Matches")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Zadatak1.Models.GroupTeam", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Zadatak1.Models.Standing", b =>
                {
                    b.HasOne("Zadatak1.Models.GroupTeam", "Team")
                        .WithMany("Standings")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
